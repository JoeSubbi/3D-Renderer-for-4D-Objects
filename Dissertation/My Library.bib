
@misc{noauthor_rotating_2021,
	title = {Rotating {3D} shapes},
	url = {https://www.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes},
	language = {English},
	urldate = {2021-10-04},
	journal = {Khan Academy},
	month = oct,
	year = {2021},
}

@phdthesis{shoemake_arcball_nodate,
	address = {Philadelphia},
	title = {Arcball {Rotation} {Control}},
	url = {https://research.cs.wisc.edu/graphics/Courses/559-f2001/Examples/Gl3D/arcball-gems.pdf},
	language = {English},
	urldate = {2021-10-04},
	school = {University of Pennsylvania},
	author = {Shoemake, Ken},
	annote = {Intuitive and "commutative" rotation},
	annote = {Read - need to review the maths},
}

@phdthesis{matsumoto_polyvision_2019,
	title = {Polyvision: {4D} {Space} {Manipulation} through {Multiple} {Projections}},
	copyright = {Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s). SA ’19 Emerging Technologies, November 17-20, 2019, Brisbane, QLD, Australia © 2019 Copyright held by the owner/author(s).},
	url = {https://www.math.kyoto-u.ac.jp/~kaji/papers/SIGGRAPH2019_Polyvision_final.pdf},
	abstract = {Seeing is believing. Our novel virtual reality system, Polyvision, applies this old saying to the fourth dimension. Various shadows of
an object in a four-dimensional (4D) space are simultaneously projected onto multiple three-dimensional (3D) screens created in a
virtual environment to reveal its intricate shape. The understanding
of high-dimensional shapes and data can essentially be enhanced
when good visualization is complemented by interactive functionality. However, a method to implement an interface for handling
complex 4D transformations in a user-friendly manner must be developed. Using our Polyvision system, the user can manipulate each
shadow as if it were a 3D object in their hand. The user’s action on
each projection is reflected to the original 4D object, and in turn its
projections, in real time. While controlling the object’s orientation
minutely on one shadow, the user can grasp its global structure
from multiple changing projections. Our system has a wide variety of applications in visualization, education, mathematical research,
and entertainment, as we demonstrate with a variety of 4D objects
that appear in mathematics and data sciences.},
	language = {English},
	urldate = {2021-10-04},
	school = {The University of Tokyo, Kyoto University, Kyushu University},
	author = {Matsumoto, Keigo and Ogawa, Nami and Inou, Hiroyuki and Kaji, Shizuo and Ishii, Yutaka and Hirose, Michitaka},
	year = {2019},
	annote = {4D slices in different orientations},
	annote = {Read},
}

@phdthesis{noauthor_3d_2000,
	title = {{3D} {Scene} {Manipulation} with {2D} {Devices} and {Constraints}},
	url = {https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.26.5800&rep=rep1&type=pdf},
	urldate = {2021-10-04},
	year = {2000},
	annote = {Objects constrained in the real world can be manipulated in 2D},
	annote = {Reading - not too relevant
 },
}

@phdthesis{reisman_screen-space_2009,
	address = {New York},
	type = {Research {Article}},
	title = {A screen-space formulation for {2D} and {3D} direct manipulation},
	url = {https://doi.org/10.1145/1622176.1622190},
	abstract = {Rotate-Scale-Translate (RST) interactions have become the de facto standard when interacting with two-dimensional (2D) contexts in single-touch and multi-touch environments. Because the use of RST has thus far focused almost entirely on 2D, there are not yet standard techniques for extending these principles into three dimensions. In this paper we describe a screen-space method which fully captures the semantics of the traditional 2D RST multi-touch interaction, but also allows us to extend these same principles into three-dimensional (3D) interaction. Just like RST allows users to directly manipulate 2D contexts with two or more points, our method allows the user to directly manipulate 3D objects with three or more points. We show some novel interactions, which take perspective into account and are thus not available in orthographic environments. Furthermore, we identify key ambiguities and unexpected behaviors that arise when performing direct manipulation in 3D and offer solutions to mitigate the difficulties each presents. Finally, we show how to extend our method to meet application-specific control objectives, as well as show our method working in some example environments.},
	language = {English},
	urldate = {2021-10-04},
	author = {Reisman, Jason L. and Davidson, Philip L. and Han, Jefferson Y.},
	month = oct,
	year = {2009},
}

@phdthesis{murata_interactive_nodate,
	title = {Interactive {Environment} for {Intuitive} {Understanding} of {4D} {Object} and {Space}},
	url = {https://doi.org/10.1142/9789812791993_0024},
	abstract = {We present a new virtual reality system to assist intuitive understanding of 4D data. The system is composed of a motion capture device, a large screen, a stereo viewing system and a graphics workstation. In this environment, a user can go around the 4D world freely and interact with 4D data.

The system can display four types of 4D data including 4D solid objects, 3D scalar potential fields, the profile of the complex function and 3D time-series data. Two mapping methods are employed to generate corresponding 3D images: They are the projection from 4D space to 3D space and the 3D section of 4D data.

The user can observe the 4D object from an arbitrary 4D viewpoint and slice it from an arbitrary 4D direction by matching his 3D position to the point which lies on the surface of the 4D sphere surrounding the object. Moreover, using stereo glasses and position sensors attached to each hand, the user can easily rotate the 3D shape mapped from 4D space.

As a result of evaluation, it was proved that the interaction with 4D data is effective for intuitive understanding of 4D.},
	author = {Murata, Makoto and Hashimoto, Shuji},
}

@phdthesis{mossel_3d_2013,
	type = {Research {Article}},
	title = {{3D} {Touch} and {HOMER}-{S}: intuitive manipulation techniques for one-handed handeheld augmented reality},
	url = {https://doi.org/10.1145/2466816.2466829},
	abstract = {Existing interaction techniques for mobile AR often use the multi-touch capabilities of the device's display for object selection and manipulation. To provide full 3D manipulation by touch in an integral way, existing approaches use complex multi finger and hand gestures. However, they are difficult or impossible to use in one-handed handheld AR scenarios and their usage requires prior knowledge. Furthermore, a handheld's touch screen offers only two dimensions for interaction and limits manipulation to physical screen size. To overcome these problems, we present two novel intuitive six degree-of-freedom (6DOF) manipulation techniques, 3DTouch and HOMER-S. While 3DTouch uses only simple touch gestures and decomposes the degrees of freedom, Homer-S provides full 6DOF and is decoupled from screen input to overcome physical limitations. In a comprehensive user study, we explore performance, usability and accuracy of both techniques. Therefore, we compare 3DTouch with HOMER-S in four different scenarios with varying transformation requirements. Our results reveal both techniques to be intuitive to translate and rotate objects. HOMER-S lacks accuracy compared to 3DTouch but achieves significant performance increases in terms of speed for transformations addressing all 6DOF.},
	language = {English},
	urldate = {2021-10-04},
	author = {Mossel, Annette and Venditti, Benjamin and Kaufmann, Hannes},
	year = {2013},
}

@phdthesis{bosch_n-dimensional_2020,
	type = {Research {Article}},
	title = {N-{Dimensional} rigid body dynamics},
	url = {https://doi.org/10.1145/3386569.3392483},
	abstract = {I present a formulation for Rigid Body Dynamics that is independent of the dimension of the space. I describe the state and equations of motion of rigid bodies using geometric algebra. Using collision detection algorithms extended to nD I resolve collisions and contact between bodies. My implementation is 4D, but the techniques described here apply to any number of dimensions. I display these four-dimensional rigid bodies by taking a three-dimensional slice through them. I allow the user to manipulate these bodies in real-time.},
	urldate = {2021-10-05},
	author = {Bosch, Marc Ten},
	month = jul,
	year = {2020},
	annote = {https://marctenbosch.com/ndphysics/},
	annote = {Marc Ten Bosch},
}

@misc{noauthor_ray_2018,
	title = {Ray {Marching} for {Dummies}!},
	url = {https://www.youtube.com/watch?v=PGtv-dBi2wE},
	publisher = {The Art of Code},
	author = {, Martin},
	month = dec,
	year = {2018},
}

@misc{noauthor_writing_2019,
	title = {Writing a ray marcher in {Unity}},
	url = {https://www.youtube.com/watch?v=S8AWd66hoCo},
	publisher = {The Art of Code},
	author = {, Martin},
	month = dec,
	year = {2019},
}

@misc{noauthor_ray_2019,
	title = {Ray {Marching} {Simple} {Shapes}},
	url = {https://www.youtube.com/watch?v=Ff0jJyyiVyw},
	publisher = {The Art of Code},
	author = {, Martin},
	month = jan,
	year = {2019},
}

@misc{noauthor_raymarching_2019,
	title = {{RayMarching}: {Basic} {Operators}},
	url = {https://www.youtube.com/watch?v=AfKGMUDWfuE},
	publisher = {The Art of Code},
	author = {, Martin},
	month = feb,
	year = {2019},
}

@phdthesis{tianli_4d_2018,
	title = {{4D} {Rendering}: {Projection} \& {Cross} {Section}},
	url = {https://luicat.github.io/2018/05/23/4D-rendering.html},
	abstract = {This report describes the design and details in implementation of a 4D rendering system based on Unity. The 4D rendering system provides two ways of viewing a 4D model in 3D object space, including projection and cross section, which can be normally shown on a 2D screen or other suitable devices. Supporting features including limited 4D rotation and translation are provided, which allows different viewing angle of a 4D model.},
	school = {KTH Royal Institute of Technology},
	author = {Tianli, Zhang},
	month = may,
	year = {2018},
	annote = {Read - need to go more indepth},
	annote = {Using verticies to create 4D objects
Easier for not curved shapes. Limited},
}

@misc{noauthor_pentachoron_nodate,
	title = {Pentachoron},
	url = {https://math.wikia.org/wiki/Pentachoron},
	abstract = {In geometry, the Pentachoron or 5-cell is a four-dimensional object bounded by 5 tetrahedral cells. It is also known as the tetrahedral hyperpyramid or 4-Simplex. It is a 4-simplex, the simplest possible convex regular 4-polytope (four-dimensional analogue of a polyhedron), and is analogous to the tetrahedron in three dimensions and the triangle  in two dimensions. The regular polychoron has 5 vertices, 10 edges, 10 faces, and 5 cells. With s being the length of each side, it has an edge length of 10s, a surface area of 5√3s{\textasciicircum}2/2, a surcell volume of 5s{\textasciicircum}3/6/√2, and a surteron bulk of √5s{\textasciicircum}4/96},
	annote = {"analogous to the tetrahedron"},
}

@misc{noauthor_hexahedron_nodate,
	title = {Hexahedron},
	url = {https://en.wikipedia.org/wiki/Hexahedron},
	abstract = {A hexahedron (plural: hexahedra) is any polyhedron with six faces. A cube, for example, is a regular hexahedron with all its faces square},
}

@misc{noauthor_-hedron_nodate,
	title = {-hedron},
	url = {https://www.collinsdictionary.com/dictionary/english/hedron},
}

@misc{noauthor_-gon_nodate,
	title = {-gon},
	url = {https://www.collinsdictionary.com/dictionary/english/gon_1},
}

@book{parker_things_2014,
	title = {Things to make and do in the fourth dimension},
	language = {English},
	publisher = {Particular Books},
	author = {Parker, Matt},
	year = {2014},
}

@misc{noauthor_-choron_nodate,
	title = {-choron},
	url = {https://en.wiktionary.org/wiki/-choron},
}
